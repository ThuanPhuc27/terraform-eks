================== karpenter 

kubectl logs -f deployment/karpenter -n kube-system



================ aws 

aws eks update-kubeconfig --region ap-southeast-1 --name tool-cluster-dev

aws eks update-kubeconfig --region ap-southeast-1 --name shoeshop-cluster-dev

aws secretsmanager delete-secret --secret-id tool-cluster-dev-general-secret --force-delete-without-recovery

aws configure

================ vpc-cni 

kubectl set env daemonset aws-node -n kube-system ENABLE_PREFIX_DELEGATION=true

kubectl set env ds aws-node -n kube-system WARM_PREFIX_TARGET=1

kubectl set env ds aws-node -n kube-system WARM_IP_TARGET=5

kubectl set env ds aws-node -n kube-system MINIMUM_IP_TARGET=5

================ ebs-csi 

kubectl logs -f deployment/ebs-csi-controller -n kube-system

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gp3-waitforfirstcustomer
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
parameters:
  type: gp3
  encrypted: "true"
allowVolumeExpansion: true

================= ECR 

aws ecr get-login-password --region ap-southeast-1

kubectl create secret docker-registry ecr-credentials \
  --docker-server=418295694191.dkr.ecr.ap-southeast-1.amazonaws.com \
  --docker-username=AWS \
  --docker-password=$(aws ecr get-login-password --region ap-southeast-1) \
  --namespace=default

kubectl create secret docker-registry ecr-credentials --docker-server=418295694191.dkr.ecr.ap-southeast-1.amazonaws.com --docker-username=AWS --docker-password=$(aws ecr get-login-password --region ap-southeast-1) --namespace=online-boutique

kubectl create secret docker-registry ecr-credentials --docker-server=418295694191.dkr.ecr.ap-southeast-1.amazonaws.com --docker-username=AWS --docker-password=$(aws ecr get-login-password --region ap-southeast-1) --namespace=argocd

=============== argocd 

kubectl -n argocd get secret argocd-secret -o jsonpath="{.data.clearPassword}" | base64 -d

kubectl -n argocd get secret argocd-secret -o jsonpath="{.data.clearPassword}" | % { [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($_)) }

